services:
  # Servicio de usuarios
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - user_data:/app/data
      - ./user-service/users.db:/app/users.db
    networks:
      - microservices-network
    restart: unless-stopped

  # Servicio de tareas
  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    container_name: task-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - USER_SERVICE_URL=http://user-service:3001
    volumes:
      - task_data:/app/data
      - ./task-service/tasks.db:/app/tasks.db
    networks:
      - microservices-network
    depends_on:
      - user-service
    restart: unless-stopped

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'      # HTTP
      - '443:443'    # HTTPS  
      - '81:81'      # Admin interface
    environment:
      - DB_SQLITE_FILE=/data/database.sqlite
    volumes:
      - nginx_data:/data
      - nginx_letsencrypt:/etc/letsencrypt
      - ./nginx-custom:/data/nginx/custom 
    networks:
      - microservices-network
    depends_on:
      - user-service
      - task-service

# Redes
networks:
  microservices-network:
    driver: bridge
    name: microservices-network

# Vol√∫menes para persistencia
volumes:
  user_data:
    driver: local
  task_data:
    driver: local
  nginx_data:
    driver: local
  nginx_letsencrypt:
    driver: local